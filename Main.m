disp ('Directory:')

disp ('AP for Apparent places')
disp ('TRA for True Right Ascension')
disp ('MRAT for nutational Mean Right Ascension')
disp ('MRATo for precessional Mean Right Ascension')
disp ('E for Ecliptic')
disp ('IT for Instantaneous Terrestrial System')
disp ('CT for Conventional Terrestrial')
disp ('LA for Local Astronomical')
disp ('Input Example: APtoLA')

Str = input('Choose from above indicating coordinate systems with a "to" in between: ','s');


if (strcmp(Str,'APtoTRA') == 1)
    x = input('Insert Right Ascension and Declination in DMS: ');
    alpha = DMStoDeg([x(1) x(2) x(3)]);
    dec = DMStoDeg([x(4) x(5) x(6)]);
    TRA = APtoTRA(alpha,dec);
    XTRA = TRA(1)
    YTRA = TRA(2)
    ZTRA = TRA(3)
elseif (strcmp(Str,'TRAtoAP') == 1)
    x = input('Insert Right Ascension and Declination in DMS: ');
    alpha = DMStoDeg([x(1) x(2) x(3)]);
    dec = DMStoDeg([x(4) x(5) x(6)]); 
    AP = TRAtoAP(alpha,dec);
    XAP = AP(1)
    YAP = AP(2)
    ZAP = AP(3)
elseif (strcmp(Str,'TRAtoMRAT') == 1)
    x = input('Insert Right Ascension and Declination in DMS: ');
    alpha = DMStoDeg([x(1) x(2) x(3)]);
    dec = DMStoDeg([x(4) x(5) x(6)]);
    TRA = APtoTRA(alpha,dec);
    JD = input('Insert Julien Date: ');
    [ E, dE, dxi ] = Nutation(JD);
    MRAT = TRAtoMRAT(E, dE, dxi, TRA);
    XMRAT = MRAT(1)
    YMRAT = MRAT(2)
    ZMRAT = MRAT(3)
elseif (strcmp(Str,'MRATtoMRATo') == 1)
    x = input('Insert Right Ascension and Declination in DMS: ');
    alpha = DMStoDeg([x(1) x(2) x(3)]);
    dec = DMStoDeg([x(4) x(5) x(6)]);
    MRAT = AngletoXYZ(alpha,dec);
    JD = input('Insert Julien Date: ');
    [ Z, theta, zeta] = Precession(JD);
    MRATo = MRATtoMRATo(Z, theta, zeta, MRAT);
    XMRATo = MRATo(1)
    YMRATo = MRATo(2)
    ZMRATo = MRATo(3)
elseif (strcmp(Str,'MRATotoE') == 1)
    x = input('Insert Right Ascension and Declination in DMS: ');
    alpha = DMStoDeg([x(1) x(2) x(3)]);
    dec = DMStoDeg([x(4) x(5) x(6)]);
    MRATo = AngletoXYZ(alpha,dec);
    E = MRATotoE(MRATo);
    XE = E(1)
    YE = E(2)
    ZE = E(3)
elseif (strcmp(Str,'EtoMRATo') == 1)
    x = input('Insert Latitude and longtitude in DMS: ');
    Lambda = DMStoDeg([x(1) x(2) x(3)]);
    Phi = DMStoDeg([x(4) x(5) x(6)]);
    E = AngletoXYZ(Lambda,Phi);
    MRATo = EtoMRATo(E);
    XMRATo = MRATo(1)
    YMRATo = MRATo(2)
    ZMRATo = MRATo(3)
elseif (strcmp(Str,'MRATotoMRAT') == 1)
    x = input('Insert Latitude and longtitude in DMS: ');
    Lambda = DMStoDeg([x(1) x(2) x(3)]);
    Phi = DMStoDeg([x(4) x(5) x(6)]);
    MRATo = AngletoXYZ(Lambda,Phi);
    JD = input('Insert Julien Date: ');
    [Z, theta, zeta] = Precession(JD);
    MRAT = MRATotoMRAT(Z,theta, zeta, MRATo);
    XMRAT = MRAT(1)
    YMRAT = MRAT(2)
    ZMRAT = MRAT(3)
elseif (strcmp(Str,'MRATtoTRA') == 1)
    x = input('Insert Latitude and longtitude in DMS: ');
    Lambda = DMStoDeg([x(1) x(2) x(3)]);
    Phi = DMStoDeg([x(4) x(5) x(6)]);
    MRAT = AngletoXYZ(Lambda,Phi);
    JD = input('Insert Julien Date: ');
    [ E, dE, dxi ] = Nutation(JD);
    TRA = MRATtoTRA(E, dE, dxi, MRAT);
    XMRA = TRA(1)
    YMRA = TRA(2)
    ZMRA = TRA(3)
elseif (strcmp(Str,'APtoIT') == 1)
    x = input('Insert origin  & Latitude and GAST in DMS: ');
    Lambda = DMStoDeg([x(1) x(2) x(3)]);
    Phi = DMStoDeg([x(4) x(5) x(6)]);
    angle1 = DMStoDeg([x(7) x(8) x(9)]);
    angle2 = DMStoDeg([x(10) x(11) x(12)]);
    GAST = DMStoDeg([x(13) x(14) x(15)]);
    AP = AngletoXYZ(angle1, angle2);
    IT = APtoIT(GAST,AP);
    [alpha, dec] = XYZtoAngle(IT(1), IT(2), IT(3))
    XIT = IT(1)
    YIT = IT(2)
    ZIT = IT(3)
elseif (strcmp(Str,'APtoCT') == 1)
    x = input('Insert origin Latitude & Longtitude and Astronomical Longtitude & Latitude and GAST in DMS: ');
    Lambda = DMStoDeg([x(1) x(2) x(3)]);
    Phi = DMStoDeg([x(4) x(5) x(6)]);
    angle1 = DMStoDeg([x(7) x(8) x(9)]);
    angle2 = DMStoDeg([x(10) x(11) x(12)]);
    GAST = DMStoDeg([x(13) x(14) x(15)]);
    AP = AngletoXYZ(angle1, angle2);
    xp = SectoDegrees(0.133); % check 
    yp = SectoDegrees(0.294); % check
    CT = APtoCT(GAST, yp, xp, AP);
    XIT = IT(1)
    YIT = IT(2)
    ZIT = IT(3)
elseif (strcmp(Str,'APtoLA') == 1)
    x = input('Insert origin Latitude & Longtitude and Astronomical Longtitude & Latitude and GAST in DMS: ');
    Lambda = DMStoDeg([x(1) x(2) x(3)]);
    Phi = DMStoDeg([x(4) x(5) x(6)]);
    angle1 = DMStoDeg([x(7) x(8) x(9)]);
    angle2 = DMStoDeg([x(10) x(11) x(12)]);
    GAST = DMStoDeg([x(13) x(14) x(15)]);
    AP = AngletoXYZ(angle1, angle2);
    LA = APtoLA(Lambda, Phi, GAST, AP);
    XLA = LA(1)
    YLA = LA(2)
    ZLA = LA(3)
elseif (strcmp(Str,'ITtoAP') == 1)
    x = input('Insert origin Latitude & Longtitude and Astronomical Longtitude & Latitude and GAST in DMS: ');
    Lambda = DMStoDeg([x(1) x(2) x(3)]);
    Phi = DMStoDeg([x(4) x(5) x(6)]);
    angle1 = DMStoDeg([x(7) x(8) x(9)]);
    angle2 = DMStoDeg([x(10) x(11) x(12)]);
    GAST = DMStoDeg([x(13) x(14) x(15)]);
    IT = AngletoXYZ(angle1, angle2);
    AP = APtoIT(GAST,IT);
    [Angle , angle] = XYZtoAngle(AP(1),AP(2),AP(3))
    %XAP = AP(1)
    %YAP = AP(2)
    %ZAP = AP(3)
elseif (strcmp(Str,'ITtoCT') == 1)
    x = input('Insert Latitude & Longtitude in DMS: ');
    Lambda = DMStoDeg([x(1) x(2) x(3)]);
    Phi = DMStoDeg([x(4) x(5) x(6)]);
    IT = AngletoXYZ(Lambda,Phi);
    xp = SectoDegrees(0.133); % check 
    yp = SectoDegrees(0.294); % check
    CT = ITtoCT(xp,yp,IT);
    XCT = CT(1)
    YCT = CT(2)
    ZCT = CT(3)
elseif (strcmp(Str,'ITtoLA') == 1)
    x = input('Insert origin Latitude & Longtitude and Astronomical Longtitude and Latitude in DMS: ');
    Lambda = DMStoDeg([x(1) x(2) x(3)]);
    Phi = DMStoDeg([x(4) x(5) x(6)]);
    angle1 = DMStoDeg([x(7) x(8) x(9)]);
    angle2 = DMStoDeg([x(10) x(11) x(12)]);
    IT = AngletoXYZ(angle1,angle2);
    LA = ITtoLA(Lambda, Phi, IT);
    XLA = LA(1)
    YLA = LA(2)
    ZLA = LA(3)
elseif (strcmp(Str,'LAtoIT') == 1)
    x = input('Insert origin Latitude & Longtitude and Astronomical Longtitude and Latitude in DMS: ');
    Lambda = DMStoDeg([x(1) x(2) x(3)]);
    Phi = DMStoDeg([x(4) x(5) x(6)]);
    angle1 = DMStoDeg([x(7) x(8) x(9)]);
    angle2 = DMStoDeg([x(10) x(11) x(12)]);
    LA = AngletoXYZ(angle1,angle2);
    IT = LAtoIT(Lambda,Phi, LA);
    XIT = IT(1)
    YIT = IT(2)
    ZIT = IT(3)
elseif (strcmp(Str,'LAtoCT') == 1)
    x = input('Insert origin Latitude & Longtitude and Astronomical Longtitude and Latitude in DMS: ');
    Lambda = DMStoDeg([x(1) x(2) x(3)]);
    Phi = DMStoDeg([x(4) x(5) x(6)]);
    angle1 = DMStoDeg([x(7) x(8) x(9)]);
    angle2 = DMStoDeg([x(10) x(11) x(12)]);
    LA = AngletoXYZ(angle1,angle2);
    CT = LAtoCT(Lambda, Phi, LA);
    XCT = CT(1)
    YCT = CT(2)
    ZCT = CT(3)
elseif (strcmp(Str,'LAtoAP') == 1)
    x = input('Insert origin Latitude & Longtitude and Astronomical Longtitude & Latitude and GAST in DMS: ');
    Lambda = DMStoDeg([x(1) x(2) x(3)]);
    Phi = DMStoDeg([x(4) x(5) x(6)]);
    angle1 = DMStoDeg([x(7) x(8) x(9)]);
    angle2 = DMStoDeg([x(10) x(11) x(12)]);
    GAST = DMStoDeg([x(13) x(14) x(15)]);
    LA = AngletoXYZ(angle1, angle2);
    AP = LAtoAP(Lambda, Phi, GAST, LA);
    XAP = AP(1)
    YAP = AP(2)
    ZAP = AP(3)
elseif (strcmp(Str,'CTtoAP') == 1)
    x = input('Insert Latitude & Longtitude and GAST in DMS: ');
    Lambda = DMStoDeg([x(1) x(2) x(3)]);
    Phi = DMStoDeg([x(4) x(5) x(6)]);
    GAST = DMStoDeg([x(7) x(8) x(9)]);
    CT = AngletoXYZ(Lambda, Phi);
    xp = SectoDegrees(0.133); % check 
    yp = SectoDegrees(0.294); % check
    AP = CTtoAP(GAST, yp,xp,CT);
    XAP = AP(1)
    YAP = AP(2)
    ZAP = AP(3)
elseif (strcmp(Str,'CTtoIT') == 1)
    x = input('Insert origin Latitude & Longtitude and Astronomical Longtitude and Latitude in DMS: ');
    Lambda = DMStoDeg([x(1) x(2) x(3)]);
    Phi = DMStoDeg([x(4) x(5) x(6)]);
    CT = AngletoXYZ(Lambda,Phi);
    xp = SectoDegrees(0.133); % check 
    yp = SectoDegrees(0.294); % check
    IT = CTtoIT(yp,xp,CT);
    XIT = IT(1)
    YIT = IT(2)
    ZIT = IT(3)
elseif (strcmp(Str,'CTtoLA') == 1)
    x = input('Insert origin Latitude & Longtitude and Astronomical Longtitude and Latitude in DMS: ');
    Lambda = DMStoDeg([x(1) x(2) x(3)]);
    Phi = DMStoDeg([x(4) x(5) x(6)]);
    angle1 = DMStoDeg([x(7) x(8) x(9)]);
    angle2 = DMStoDeg([x(10) x(11) x(12)]);
    CT = AngletoXYZ(angle1,angle2);
    LA = CTtoLA(Lambda, Phi, CT);
    XLA = LA(1)
    YLA = LA(2)
    ZLA = LA(3)
elseif (strcmp(Str,'APtoE') == 1)
    x = input('Insert Right Ascension and Declination in DMS: ');
    alpha = DMStoDeg([x(1) x(2) x(3)]);
    dec = DMStoDeg([x(4) x(5) x(6)]);
    TRA = APtoTRA(alpha,dec);
    JD = input('Insert Julien Date: ');
    [ E, dE, dxi ] = Nutation(JD);
    MRAT = TRAtoMRAT(E, dE, dxi, TRA);
    [ Z, theta, zeta] = Precession(JD);
    MRATo = MRATtoMRATo(Z, theta, zeta, MRAT);
    E = MRATotoE(MRATo);
    XE = E(1)
    YE = E(2)
    ZE = E(3)
elseif (strcmp(Str,'APtoMRATo') == 1)
    x = input('Insert Right Ascension and Declination in DMS: ');
    alpha = DMStoDeg([x(1) x(2) x(3)]);
    dec = DMStoDeg([x(4) x(5) x(6)]);
    TRA = APtoTRA(alpha,dec);
    JD = input('Insert Julien Date: ');
    [ E, dE, dxi ] = Nutation(JD);
    MRAT = TRAtoMRAT(E, dE, dxi, TRA);
    [ Z, theta, zeta] = Precession(JD);
    MRATo = MRATtoMRATo(Z, theta, zeta, MRAT);
    XMRATo = MRATo(1)
    YMRATo = MRATo(2)
    ZMRATo = MRATo(3)
elseif (strcmp(Str,'APtoMRAT') == 1)
    x = input('Insert Right Ascension and Declination in DMS: ');
    alpha = DMStoDeg([x(1) x(2) x(3)]);
    dec = DMStoDeg([x(4) x(5) x(6)]);
    TRA = APtoTRA(alpha,dec);
    JD = input('Insert Julien Date: ');
    [ E, dE, dxi ] = Nutation(JD);
    MRAT = TRAtoMRAT(E, dE, dxi, TRA);
    XMRAT = MRAT(1)
    YMRAT = MRAT(2)
    ZMRAT = MRAT(3)
elseif (strcmp(Str,'TRAtoE') == 1)
    x = input('Insert Right Ascension and Declination in DMS: ');
    alpha = DMStoDeg([x(1) x(2) x(3)]);
    dec = DMStoDeg([x(4) x(5) x(6)]);
    TRA = APtoTRA(alpha,dec);
    JD = input('Insert Julien Date: ');
    [ E, dE, dxi ] = Nutation(JD);
    MRAT = TRAtoMRAT(E, dE, dxi, TRA);
    [ Z, theta, zeta] = Precession(JD);
    MRATo = MRATtoMRATo(Z, theta, zeta, MRAT);
    E = MRATotoE(MRATo);
    XE = E(1)
    YE = E(2)
    ZE = E(3)
elseif (strcmp(Str,'TRAtoMRATo') == 1)
    x = input('Insert Right Ascension and Declination in DMS: ');
    alpha = DMStoDeg([x(1) x(2) x(3)]);
    dec = DMStoDeg([x(4) x(5) x(6)]);
    TRA = APtoTRA(alpha,dec);
    JD = input('Insert Julien Date: ');
    [ E, dE, dxi ] = Nutation(JD);
    MRAT = TRAtoMRAT(E, dE, dxi, TRA);
    [ Z, theta, zeta] = Precession(JD);
    MRATo = MRATtoMRATo(Z, theta, zeta, MRAT);
    XMRATo = MRATo(1)
    YMRATo = MRATo(2)
    ZMRATo = MRATo(3)
elseif (strcmp(Str,'MRATtoE') == 1)
    x = input('Insert Right Ascension and Declination in DMS: ');
    alpha = DMStoDeg([x(1) x(2) x(3)]);
    dec = DMStoDeg([x(4) x(5) x(6)]);
    MRAT = AngletoXYZ(alpha,dec);
    JD = input('Insert Julien Date: ');
    [ Z, theta, zeta] = Precession(JD);
    MRATo = MRATtoMRATo(Z, theta, zeta, MRAT);
    E = MRATotoE(MRATo);
    XE = E(1)
    YE = E(2)
    ZE = E(3)
elseif (strcmp(Str,'EtoAP') == 1)
    x = input('Insert Latitude and longtitude in DMS: ');
    Lambda = DMStoDeg([x(1) x(2) x(3)]);
    Phi = DMStoDeg([x(4) x(5) x(6)]);
    E = AngletoXYZ(Lambda,Phi);
    MRATo = EtoMRATo(E);
    JD = input('Insert Julien Date: ');
    [ Z, theta, zeta] = Precession(JD);
    MRAT = MRATotoMRAT(Z,theta, zeta, MRATo);
    [ E, dE, dxi ] = Nutation(JD);
    TRA = MRATtoTRA(E,dE,dxi, MRAT);
    [alpha, dec] = XYZtoAngle(TRA(1),TRA(2),TRA(3));
    AP = TRAtoAP(alpha,dec);
    XAP = AP(1)
    YAP = AP(2)
    ZAP = AP(3)
elseif (strcmp(Str,'EtoTRA') == 1)
    x = input('Insert Latitude and longtitude in DMS: ');
    Lambda = DMStoDeg([x(1) x(2) x(3)]);
    Phi = DMStoDeg([x(4) x(5) x(6)]);
    E = AngletoXYZ(Lambda,Phi);
    MRATo = EtoMRATo(E);
    JD = input('Insert Julien Date: ');
    [ Z, theta, zeta] = Precession(JD);
    MRAT = MRATotoMRAT(Z,theta, zeta, MRATo);
    [ E, dE, dxi ] = Nutation(JD);
    TRA = MRATtoTRA(E,dE,dxi, MRAT);
    XTRA = TRA(1)
    YTRA = TRA(2)
    ZTRA = TRA(3)
elseif (strcmp(Str,'EtoMRAT') == 1)
    x = input('Insert Latitude and longtitude in DMS: ');
    Lambda = DMStoDeg([x(1) x(2) x(3)]);
    Phi = DMStoDeg([x(4) x(5) x(6)]);
    E = AngletoXYZ(Lambda,Phi);
    MRATo = EtoMRATo(E);
    JD = input('Insert Julien Date: ');
    [ Z, theta, zeta] = Precession(JD);
    MRAT = MRATotoMRAT(Z,theta, zeta, MRATo);
    XMRAT = MRAT(1)
    YMRAT = MRAT(2)
    ZMRAT = MRAT(3)
elseif (strcmp(Str,'MRATotoAP') == 1)
    x = input('Insert Latitude and longtitude in DMS: ');
    Lambda = DMStoDeg([x(1) x(2) x(3)]);
    Phi = DMStoDeg([x(4) x(5) x(6)]);
    MRATo = AngletoXYZ(Lambda,Phi);
    JD = input('Insert Julien Date: ');
    [ Z, theta, zeta] = Precession(JD);
    MRAT = MRATotoMRAT(Z,theta, zeta, MRATo);
    [ E, dE, dxi ] = Nutation(JD);
    TRA = MRATtoTRA(E,dE,dxi, MRAT);
    [alpha, dec] = XYZtoAngle(TRA(1),TRA(2),TRA(3));
    AP = TRAtoAP(alpha,dec);
    XAP = AP(1)
    YAP = AP(2)
    ZAP = AP(3)
elseif (strcmp(Str,'MRATotoTRA') == 1)
    x = input('Insert Latitude and longtitude in DMS: ');
    Lambda = DMStoDeg([x(1) x(2) x(3)]);
    Phi = DMStoDeg([x(4) x(5) x(6)]);
    MRATo = AngletoXYZ(Lambda,Phi);
    JD = input('Insert Julien Date: ');
    [ Z, theta, zeta] = Precession(JD);
    MRAT = MRATotoMRAT(Z,theta, zeta, MRATo);
    [ E, dE, dxi ] = Nutation(JD);
    TRA = MRATtoTRA(E,dE,dxi, MRAT);
    XTRA = TRA(1)
    YTRA = TRA(2)
    ZTRA = TRA(3)
elseif (strcmp(Str,'MRATtoAP') == 1)
    x = input('Insert Latitude and longtitude in DMS: ');
    Lambda = DMStoDeg([x(1) x(2) x(3)]);
    Phi = DMStoDeg([x(4) x(5) x(6)]);
    MRAT = AngletoXYZ(Lambda,Phi);
    JD = input('Insert Julien Date: ');
    [ E, dE, dxi ] = Nutation(JD);
    TRA = MRATtoTRA(E,dE,dxi, MRAT);
    [alpha, dec] = XYZtoAngle(TRA(1),TRA(2),TRA(3));
    AP = TRAtoAP(alpha,dec);
    XAP = AP(1)
    YAP = AP(2)
    ZAP = AP(3)    
elseif (strcmp(Str,'CTtoE') == 1)
    x = input('Insert Latitude, longtitude and GAST in DMS: ');
    Lambda = DMStoDeg([x(1) x(2) x(3)]);
    Phi = DMStoDeg([x(4) x(5) x(6)]);
    GAST = DMStoDeg([x(7) x(8) x(9)]);
    xp = SectoDegrees(0.133); % check 
    yp = SectoDegrees(0.294); % check
    CT = AngletoXYZ(Lambda,Phi);
    AP = CTtoAP(GAST, yp,xp,CT);
    [alpha, dec] = XYZtoAngle(AP(1),AP(2),AP(3));
    TRA = APtoTRA(alpha,dec);
    JD = input('Insert Julien Date: ');
    [ E, dE, dxi ] = Nutation(JD);
    MRAT = TRAtoMRAT(E, dE, dxi, TRA);
    [ Z, theta, zeta] = Precession(JD);
    MRATo = MRATtoMRATo(Z, theta, zeta, MRAT);
    E = MRATotoE(MRATo);
    XE = E(1)
    YE = E(2)
    ZE = E(3)
elseif (strcmp(Str,'CTtoMRATo') == 1)
    x = input('Insert Latitude, longtitude and GAST in DMS: ');
    Lambda = DMStoDeg([x(1) x(2) x(3)]);
    Phi = DMStoDeg([x(4) x(5) x(6)]);
    GAST = DMStoDeg([x(7) x(8) x(9)]);
    xp = SectoDegrees(0.133); % check 
    yp = SectoDegrees(0.294); % check
    CT = AngletoXYZ(Lambda,Phi);
    AP = CTtoAP(GAST, yp,xp,CT);
    [alpha, dec] = XYZtoAngle(AP(1),AP(2),AP(3));
    TRA = APtoTRA(alpha,dec);
    JD = input('Insert Julien Date: ');
    [ E, dE, dxi ] = Nutation(JD);
    MRAT = TRAtoMRAT(E, dE, dxi, TRA);
    [ Z, theta, zeta] = Precession(JD);
    MRATo = MRATtoMRATo(Z, theta, zeta, MRAT);
    XMRATo = MRATo(1)
    YMRATo = MRATo(2)
    ZMRATo = MRATo(3)
elseif (strcmp(Str,'CTtoMRAT') == 1)
    x = input('Insert Latitude, longtitude and GAST in DMS: ');
    Lambda = DMStoDeg([x(1) x(2) x(3)]);
    Phi = DMStoDeg([x(4) x(5) x(6)]);
    GAST = DMStoDeg([x(7) x(8) x(9)]);
    xp = SectoDegrees(0.133); % check 
    yp = SectoDegrees(0.294); % check
    CT = AngletoXYZ(Lambda,Phi);
    AP = CTtoAP(GAST, yp,xp,CT);
    [alpha, dec] = XYZtoAngle(AP(1),AP(2),AP(3));
    TRA = APtoTRA(alpha,dec);
    JD = input('Insert Julien Date: ');
    [ E, dE, dxi ] = Nutation(JD);
    MRAT = TRAtoMRAT(E, dE, dxi, TRA);
    XMRAT = MRAT(1)
    YMRAT = MRAT(2)
    ZMRAT = MRAT(3)
elseif (strcmp(Str,'CTtoTRA') == 1)
    x = input('Insert Latitude, longtitude and GAST in DMS: ');
    Lambda = DMStoDeg([x(1) x(2) x(3)]);
    Phi = DMStoDeg([x(4) x(5) x(6)]);
    GAST = DMStoDeg([x(7) x(8) x(9)]);
    xp = SectoDegrees(0.133); % check 
    yp = SectoDegrees(0.294); % check
    CT = AngletoXYZ(Lambda,Phi);
    AP = CTtoAP(GAST, yp,xp,CT);
    [alpha, dec] = XYZtoAngle(AP(1),AP(2),AP(3));
    TRA = APtoTRA(alpha,dec);
    XTRA = TRA(1)
    YTRA = TRA(2)
    ZTRA = TRA(3)
elseif (strcmp(Str,'ITtoE') == 1)
    x = input('Insert Latitude and longtitude & GAST in DMS: ');
    Lambda = DMStoDeg([x(1) x(2) x(3)]);
    Phi = DMStoDeg([x(4) x(5) x(6)]);
    GAST = DMStoDeg([x(7) x(8) x(9)]);
    IT = AngletoXYZ(Lambda, Phi);
    AP = APtoIT(GAST,AP);
    [alpha, dec] = XYZtoAngle(AP(1),AP(2),AP(3));
    TRA = APtoTRA(alpha,dec);
    JD = input('Insert Julien Date: ');
    [ E, dE, dxi ] = Nutation(JD);
    MRAT = TRAtoMRAT(E, dE, dxi, TRA);
    [ Z, theta, zeta] = Precession(JD);
    MRATo = MRATtoMRATo(Z, theta, zeta, MRAT);
    E = MRATotoE(MRATo);
    XE = E(1)
    YE = E(2)
    ZE = E(3)
elseif (strcmp(Str,'ITtoMRATo') == 1)
    x = input('Insert Latitude and longtitude & GAST in DMS: ');
    Lambda = DMStoDeg([x(1) x(2) x(3)]);
    Phi = DMStoDeg([x(4) x(5) x(6)]);
    GAST = DMStoDeg([x(7) x(8) x(9)]);
    IT = AngletoXYZ(Lambda, Phi);
    AP = APtoIT(GAST,AP);
    [alpha, dec] = XYZtoAngle(AP(1),AP(2),AP(3));
    TRA = APtoTRA(alpha,dec);
    JD = input('Insert Julien Date: ');
    [ E, dE, dxi ] = Nutation(JD);
    MRAT = TRAtoMRAT(E, dE, dxi, TRA);
    [ Z, theta, zeta] = Precession(JD);
    MRATo = MRATtoMRATo(Z, theta, zeta, MRAT);
    XMRATo = MRATo(1)
    YMRATo = MRATo(2)
    ZMRATo = MRATo(3)
elseif (strcmp(Str,'ITtoMRAT') == 1)
    x = input('Insert Latitude and longtitude & GAST in DMS: ');
    Lambda = DMStoDeg([x(1) x(2) x(3)]);
    Phi = DMStoDeg([x(4) x(5) x(6)]);
    GAST = DMStoDeg([x(7) x(8) x(9)]);
    IT = AngletoXYZ(Lambda, Phi);
    AP = APtoIT(GAST,AP);
    [alpha, dec] = XYZtoAngle(AP(1),AP(2),AP(3));
    TRA = APtoTRA(alpha,dec);
    JD = input('Insert Julien Date: ');
    [ E, dE, dxi ] = Nutation(JD);
    MRAT = TRAtoMRAT(E, dE, dxi, TRA);
    XMRAT = MRAT(1)
    YMRAT = MRAT(2)
    ZMRAT = MRAT(3)
elseif (strcmp(Str,'ITtoTRA') == 1)
    x = input('Insert Latitude and longtitude & GAST in DMS: ');
    Lambda = DMStoDeg([x(1) x(2) x(3)]);
    Phi = DMStoDeg([x(4) x(5) x(6)]);
    GAST = DMStoDeg([x(7) x(8) x(9)]);
    IT = AngletoXYZ(Lambda, Phi);
    AP = APtoIT(GAST,AP);
    [alpha, dec] = XYZtoAngle(AP(1),AP(2),AP(3));
    TRA = APtoTRA(alpha,dec);
    XTRA = TRA(1)
    YTRA = TRA(2)
    ZTRA = TRA(3)
elseif (strcmp(Str,'LAtoE') == 1)
    x = input('Insert origin Latitude & Longtitude and Astronomical Longtitude & Latitude and GAST in DMS: ');
    Lambda = DMStoDeg([x(1) x(2) x(3)]);
    Phi = DMStoDeg([x(4) x(5) x(6)]);
    angle1 = DMStoDeg([x(7) x(8) x(9)]);
    angle2 = DMStoDeg([x(10) x(11) x(12)]);
    GAST = DMStoDeg([x(13) x(14) x(15)]);
    LA = AngletoXYZ(angle1, angle2);
    AP = LAtoAP(Lambda, Phi, GAST, LA);
    [alpha, dec] = XYZtoAngle(AP(1),AP(2),AP(3));
    TRA = APtoTRA(alpha,dec);
    JD = input('Insert Julien Date: ');
    [ E, dE, dxi ] = Nutation(JD);
    MRAT = TRAtoMRAT(E, dE, dxi, TRA);
    [ Z, theta, zeta] = Precession(JD);
    MRATo = MRATtoMRATo(Z, theta, zeta, MRAT);
    E = MRATotoE(MRATo);
    XE = E(1)
    YE = E(2)
    ZE = E(3)
elseif (strcmp(Str,'LAtoMRATo') == 1)
   x = input('Insert origin Latitude & Longtitude and Astronomical Longtitude & Latitude and GAST in DMS: ');
    Lambda = DMStoDeg([x(1) x(2) x(3)]);
    Phi = DMStoDeg([x(4) x(5) x(6)]);
    angle1 = DMStoDeg([x(7) x(8) x(9)]);
    angle2 = DMStoDeg([x(10) x(11) x(12)]);
    GAST = DMStoDeg([x(13) x(14) x(15)]);
    LA = AngletoXYZ(angle1, angle2);
    AP = LAtoAP(Lambda, Phi, GAST, LA);
    [alpha, dec] = XYZtoAngle(AP(1),AP(2),AP(3));
    TRA = APtoTRA(alpha,dec);
    JD = input('Insert Julien Date: ');
    [ E, dE, dxi ] = Nutation(JD);
    MRAT = TRAtoMRAT(E, dE, dxi, TRA);
    [ Z, theta, zeta] = Precession(JD);
    MRATo = MRATtoMRATo(Z, theta, zeta, MRAT);
    XMRATo = MRATo(1)
    YMRATo = MRATo(2)
    ZMRATo = MRATo(3)
elseif (strcmp(Str,'LAtoMRAT') == 1)
    x = input('Insert origin Latitude & Longtitude and Astronomical Longtitude & Latitude and GAST in DMS: ');
    Lambda = DMStoDeg([x(1) x(2) x(3)]);
    Phi = DMStoDeg([x(4) x(5) x(6)]);
    angle1 = DMStoDeg([x(7) x(8) x(9)]);
    angle2 = DMStoDeg([x(10) x(11) x(12)]);
    GAST = DMStoDeg([x(13) x(14) x(15)]);
    LA = AngletoXYZ(angle1, angle2);
    AP = LAtoAP(Lambda, Phi, GAST, LA);
    [alpha, dec] = XYZtoAngle(AP(1),AP(2),AP(3));
    TRA = APtoTRA(alpha,dec);
    JD = input('Insert Julien Date: ');
    [ E, dE, dxi ] = Nutation(JD);
    MRAT = TRAtoMRAT(E, dE, dxi, TRA);
    XMRAT = MRAT(1)
    YMRAT = MRAT(2)
    ZMRAT = MRAT(3)
elseif (strcmp(Str,'LAtoTRA') == 1)
    x = input('Insert origin Latitude & Longtitude and Astronomical Longtitude & Latitude and GAST in DMS: ');
    Lambda = DMStoDeg([x(1) x(2) x(3)]);
    Phi = DMStoDeg([x(4) x(5) x(6)]);
    angle1 = DMStoDeg([x(7) x(8) x(9)]);
    angle2 = DMStoDeg([x(10) x(11) x(12)]);
    GAST = DMStoDeg([x(13) x(14) x(15)]);
    LA = AngletoXYZ(angle1, angle2);
    AP = LAtoAP(Lambda, Phi, GAST, LA);
    [alpha, dec] = XYZtoAngle(AP(1),AP(2),AP(3));
    TRA = APtoTRA(alpha,dec);
    XTRA = TRA(1)
    YTRA = TRA(2)
    ZTRA = TRA(3)
elseif (strcmp(Str,'EtoLA') == 1)
    x = input('Insert origin Latitude & Longtitude and Astronomical Longtitude & Latitude and GAST in DMS: ');
    Lambda = DMStoDeg([x(1) x(2) x(3)]);
    Phi = DMStoDeg([x(4) x(5) x(6)]);
    angle1 = DMStoDeg([x(7) x(8) x(9)]);
    angle2 = DMStoDeg([x(10) x(11) x(12)]);
    E = AngletoXYZ(angle1,angle2);
    MRATo = EtoMRATo(E);
    JD = input('Insert Julien Date: ');
    [ Z, theta, zeta] = Precession(JD);
    MRAT = MRATotoMRAT(Z,theta, zeta, MRATo);
    [ E, dE, dxi ] = Nutation(JD);
    TRA = MRATtoTRA(E,dE,dxi, MRAT);
    [alpha, dec] = XYZtoAngle(TRA(1),TRA(2),TRA(3));
    AP = TRAtoAP(alpha,dec);
    [alpha1, dec1] = XYZtoAngle(AP(1),AP(2),AP(3));
    GAST = DMStoDeg([x(13) x(14) x(15)]);
    LA = APtoLA(Lambda, Phi, GAST, AP);
    XLA = LA(1)
    YLA = LA(2)
    ZLA = LA(3)
elseif (strcmp(Str,'MRATotoLA') == 1)
    x = input('Insert origin Latitude & Longtitude and Astronomical Longtitude & Latitude and GAST in DMS: ');
    Lambda = DMStoDeg([x(1) x(2) x(3)]);
    Phi = DMStoDeg([x(4) x(5) x(6)]);
    angle1 = DMStoDeg([x(7) x(8) x(9)]);
    angle2 = DMStoDeg([x(10) x(11) x(12)]);
    MRATo = AngletoXYZ(angle1,angle2);
    JD = input('Insert Julien Date: ');
    [ Z, theta, zeta] = Precession(JD);
    MRAT = MRATotoMRAT(Z,theta, zeta, MRATo);
    [ E, dE, dxi ] = Nutation(JD);
    TRA = MRATtoTRA(E,dE,dxi, MRAT);
    [alpha, dec] = XYZtoAngle(TRA(1),TRA(2),TRA(3));
    AP = TRAtoAP(alpha,dec);
    [alpha1, dec1] = XYZtoAngle(AP(1),AP(2),AP(3));
    GAST = DMStoDeg([x(13) x(14) x(15)]);
    LA = APtoLA(Lambda, Phi, GAST, AP);
    XLA = LA(1)
    YLA = LA(2)
    ZLA = LA(3)
elseif (strcmp(Str,'MRATtoLA') == 1)
    x = input('Insert origin Latitude & Longtitude and Astronomical Longtitude & Latitude and GAST in DMS: ');
    Lambda = DMStoDeg([x(1) x(2) x(3)]);
    Phi = DMStoDeg([x(4) x(5) x(6)]);
    angle1 = DMStoDeg([x(7) x(8) x(9)]);
    angle2 = DMStoDeg([x(10) x(11) x(12)]);
    MRAT = AngletoXYZ(angle1,angle2);
    JD = input('Insert Julien Date: ');
    [ E, dE, dxi ] = Nutation(JD);
    TRA = MRATtoTRA(E,dE,dxi, MRAT);
    [alpha, dec] = XYZtoAngle(TRA(1),TRA(2),TRA(3));
    AP = TRAtoAP(alpha,dec);
    [alpha1, dec1] = XYZtoAngle(AP(1),AP(2),AP(3));
    GAST = DMStoDeg([x(13) x(14) x(15)]);
    LA = APtoLA(Lambda, Phi, GAST, AP);
    XLA = LA(1)
    YLA = LA(2)
    ZLA = LA(3)
elseif (strcmp(Str,'TRAtoLA') == 1)
    x = input('Insert origin Latitude & Longtitude and Astronomical Longtitude & Latitude and GAST in DMS: ');
    Lambda = DMStoDeg([x(1) x(2) x(3)]);
    Phi = DMStoDeg([x(4) x(5) x(6)]);
    angle1 = DMStoDeg([x(7) x(8) x(9)]);
    angle2 = DMStoDeg([x(10) x(11) x(12)]); 
    TRA = AngletoXYZ(angle1, angle2);
    [alpha, dec] = XYZtoAngle(TRA(1),TRA(2),TRA(3));
    AP = TRAtoAP(alpha,dec);
    GAST = DMStoDeg([x(13) x(14) x(15)]);
    LA = APtoLA(Lambda, Phi, GAST, AP);
    XLA = LA(1)
    YLA = LA(2)
    ZLA = LA(3)
elseif (strcmp(Str,'EtoIT') == 1)
    x = input('Insert Latitude, longtitude and GAST in DMS: ');
    Lambda = DMStoDeg([x(1) x(2) x(3)]);
    Phi = DMStoDeg([x(4) x(5) x(6)]);
    E = AngletoXYZ(Lambda,Phi);
    MRATo = EtoMRATo(E);
    JD = input('Insert Julien Date: ');
    [ Z, theta, zeta] = Precession(JD);
    MRAT = MRATotoMRAT(Z,theta, zeta, MRATo);
    [ E, dE, dxi ] = Nutation(JD);
    TRA = MRATtoTRA(E,dE,dxi, MRAT);
    [alpha, dec] = XYZtoAngle(TRA(1),TRA(2),TRA(3));
    AP = TRAtoAP(alpha,dec);
    GAST = DMStoDeg([x(7) x(8) x(9)]);
    IT = APtoIT(GAST,AP);
    XIT = IT(1)
    YIT = IT(2)
    ZIT = IT(3)
elseif (strcmp(Str,'MRATotoIT') == 1)
    x = input('Insert Latitude, longtitude and GAST in DMS: ');
    Lambda = DMStoDeg([x(1) x(2) x(3)]);
    Phi = DMStoDeg([x(4) x(5) x(6)]);
    MRATo = AngletoXYZ(Lambda,Phi);
    JD = input('Insert Julien Date: ');
    [ Z, theta, zeta] = Precession(JD);
    MRAT = MRATotoMRAT(Z,theta, zeta, MRATo);
    [ E, dE, dxi ] = Nutation(JD);
    TRA = MRATtoTRA(E,dE,dxi, MRAT);
    [alpha, dec] = XYZtoAngle(TRA(1),TRA(2),TRA(3));
    AP = TRAtoAP(alpha,dec);
    GAST = DMStoDeg([x(7) x(8) x(9)]);
    IT = APtoIT(GAST,AP);
    XIT = IT(1)
    YIT = IT(2)
    ZIT = IT(3)
elseif (strcmp(Str,'MRATtoIT') == 1)
    x = input('Insert Latitude, longtitude and GAST in DMS: ');
    Lambda = DMStoDeg([x(1) x(2) x(3)]);
    Phi = DMStoDeg([x(4) x(5) x(6)]);
    MRAT = AngletoXYZ(Lambda,Phi);
    JD = input('Insert Julien Date: ');
    [ E, dE, dxi ] = Nutation(JD);
    TRA = MRATtoTRA(E,dE,dxi, MRAT);
    [alpha, dec] = XYZtoAngle(TRA(1),TRA(2),TRA(3));
    AP = TRAtoAP(alpha,dec);
    GAST = DMStoDeg([x(7) x(8) x(9)]);
    IT = APtoIT(GAST,AP);
    XIT = IT(1)
    YIT = IT(2)
    ZIT = IT(3)
elseif (strcmp(Str,'TRAtoIT') == 1)
    x = input('Insert Latitude, longtitude and GAST in DMS: ');
    Lambda = DMStoDeg([x(1) x(2) x(3)]);
    Phi = DMStoDeg([x(4) x(5) x(6)]); 
    TRA = AngletoXYZ(Lambda, Phi);
    [alpha, dec] = XYZtoAngle(TRA(1),TRA(2),TRA(3));
    AP = TRAtoAP(alpha,dec);
    GAST = DMStoDeg([x(7) x(8) x(9)]);
    IT = APtoIT(GAST,AP);
    XIT = IT(1)
    YIT = IT(2)
    ZIT = IT(3)
elseif (strcmp(Str,'EtoCT') == 1)
    x = input('Insert Latitude, longtitude and GAST in DMS: ');
    Lambda = DMStoDeg([x(1) x(2) x(3)]);
    Phi = DMStoDeg([x(4) x(5) x(6)]);
    E = AngletoXYZ(Lambda,Phi);
    MRATo = EtoMRATo(E);
    JD = input('Insert Julien Date: ');
    [ Z, theta, zeta] = Precession(JD);
    MRAT = MRATotoMRAT(Z,theta, zeta, MRATo);
    [ E, dE, dxi ] = Nutation(JD);
    TRA = MRATtoTRA(E,dE,dxi, MRAT);
    [alpha, dec] = XYZtoAngle(TRA(1),TRA(2),TRA(3));
    AP = TRAtoAP(alpha,dec);
    GAST = DMStoDeg([x(7) x(8) x(9)]);
    xp = SectoDegrees(0.133); % check 
    yp = SectoDegrees(0.294); % check
    CT = APtoCT(GAST,yp,xp,AP);
    XCT = CT(1)
    YCT = CT(2)
    ZCT = CT(3)
elseif (strcmp(Str,'MRATotoCT') == 1)
    x = input('Insert Latitude, longtitude and GAST in DMS: ');
    Lambda = DMStoDeg([x(1) x(2) x(3)]);
    Phi = DMStoDeg([x(4) x(5) x(6)]);
    MRATo = AngletoXYZ(Lambda,Phi);
    JD = input('Insert Julien Date: ');
    [ Z, theta, zeta] = Precession(JD);
    MRAT = MRATotoMRAT(Z,theta, zeta, MRATo);
    [ E, dE, dxi ] = Nutation(JD);
    TRA = MRATtoTRA(E,dE,dxi, MRAT);
    [alpha, dec] = XYZtoAngle(TRA(1),TRA(2),TRA(3));
    AP = TRAtoAP(alpha,dec);
    GAST = DMStoDeg([x(7) x(8) x(9)]);
    xp = SectoDegrees(0.133); % check 
    yp = SectoDegrees(0.294); % check
    CT = APtoCT(GAST,yp,xp,AP);
    XCT = CT(1)
    YCT = CT(2)
    ZCT = CT(3)
elseif (strcmp(Str,'MRATtoCT') == 1)
    x = input('Insert Latitude, longtitude and GAST in DMS: ');
    Lambda = DMStoDeg([x(1) x(2) x(3)]);
    Phi = DMStoDeg([x(4) x(5) x(6)]);
    MRAT = AngletoXYZ(Lambda,Phi);
    JD = input('Insert Julien Date: ');
    [ E, dE, dxi ] = Nutation(JD);
    TRA = MRATtoTRA(E,dE,dxi, MRAT);
    [alpha, dec] = XYZtoAngle(TRA(1),TRA(2),TRA(3));
    AP = TRAtoAP(alpha,dec);
    GAST = DMStoDeg([x(7) x(8) x(9)]);
    xp = SectoDegrees(0.133); % check 
    yp = SectoDegrees(0.294); % check
    CT = APtoCT(GAST,yp,xp,AP);
    XCT = CT(1)
    YCT = CT(2)
    ZCT = CT(3)
elseif (strcmp(Str,'TRAtoCT') == 1)
    x = input('Insert Latitude, longtitude and GAST in DMS: ');
    Lambda = DMStoDeg([x(1) x(2) x(3)]);
    Phi = DMStoDeg([x(4) x(5) x(6)]); 
    TRA = AngletoXYZ(Lambda, Phi);
    [alpha, dec] = XYZtoAngle(TRA(1),TRA(2),TRA(3));
    AP = TRAtoAP(alpha,dec);
    GAST = DMStoDeg([x(7) x(8) x(9)]);
    xp = SectoDegrees(0.133); % check 
    yp = SectoDegrees(0.294); % check
    CT = APtoCT(GAST,yp,xp,AP);
    XCT = CT(1)
    YCT = CT(2)
    ZCT = CT(3)
else
    disp('Invalid input');
end